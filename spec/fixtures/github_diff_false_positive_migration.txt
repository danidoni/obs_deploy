HTTP/1.1 200 
Server: GitHub.com
Date: Tue, 16 Feb 2021 09:40:44 GMT
Content-Type: text/plain; charset=utf-8
Vary: X-PJAX
ETag: W/"5112c6ac646a3c297acc98095383e87f"
Cache-Control: max-age=0, private, must-revalidate
Set-Cookie: logged_in=no; domain=.github.com; path=/; expires=Wed, 16 Feb 2022 09:40:44 GMT; secure; HttpOnly; SameSite=Lax
Strict-Transport-Security: max-age=31536000; includeSubdomains; preload
X-Frame-Options: deny
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Referrer-Policy: origin-when-cross-origin, strict-origin-when-cross-origin
Expect-CT: max-age=2592000, report-uri="https://api.github.com/_private/browser/errors"
Content-Security-Policy: default-src 'none'; base-uri 'self'; block-all-mixed-content; connect-src 'self' uploads.github.com www.githubstatus.com collector.githubapp.com api.github.com github-cloud.s3.amazonaws.com github-production-repository-file-5c1aeb.s3.amazonaws.com github-production-upload-manifest-file-7fdce7.s3.amazonaws.com github-production-user-asset-6210df.s3.amazonaws.com cdn.optimizely.com logx.optimizely.com/v1/events wss://alive.github.com; font-src github.githubassets.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: github.githubassets.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com user-images.githubusercontent.com/ *.githubusercontent.com; manifest-src 'self'; media-src 'none'; script-src github.githubassets.com; style-src 'unsafe-inline' github.githubassets.com; worker-src github.com/socket-worker-5029ae85.js gist.github.com/socket-worker-5029ae85.js
Vary: Accept-Encoding, Accept, X-Requested-With
X-GitHub-Request-Id: DB1A:511D:33E75F6:40F0218:602B931B
Transfer-Encoding: chunked

diff --git a/.rubocop_todo.yml b/.rubocop_todo.yml
index 4987339b496..564a33f4aa9 100644
--- a/.rubocop_todo.yml
+++ b/.rubocop_todo.yml
@@ -1,6 +1,6 @@
 # This configuration was generated by
 # `rubocop --auto-gen-config --auto-gen-only-exclude --exclude-limit 100`
-# on 2021-01-07 10:30:51 UTC using RuboCop version 1.8.0.
+# on 2021-02-04 14:17:37 UTC using RuboCop version 1.9.1.
 # The point is for the user to remove these configuration records
 # one by one as the offenses are removed from the code base.
 # Note that changes in the inspected code, or installation of new
diff --git a/src/api/.rubocop.yml b/src/api/.rubocop.yml
index a1eb2508d19..39f0ec3b22e 100644
--- a/src/api/.rubocop.yml
+++ b/src/api/.rubocop.yml
@@ -33,6 +33,140 @@ Style/CommentAnnotation:
 Style/GlobalVars:
   AllowedVariables: ['$rabbitmq_conn', '$rabbitmq_exchange', '$rabbitmq_channel']
 
+Style/MethodCallWithArgsParentheses:
+  Enabled: true
+  Exclude:
+    - 'app/views/**/*'
+    - 'db/migrate/**/*'
+    - 'Gemfile*'
+  # the cop doesn't come with a well defined list of good methods, so this
+  # list is the list of offending functions when introducing. Removing functions
+  # from here leads to autocorrecting calls, if you call a new DSL function, add
+  # it here
+  IgnoredMethods:
+    - abort
+    - add_column
+    - add_element
+    - add_foreign_key
+    - add_index
+    - add_reference
+    - after_action
+    - and_return
+    - around
+    - assert
+    - assert_equal
+    - assert_kind_of
+    - assert_match
+    - assert_nil
+    - assert_not
+    - assert_not_equal
+    - assert_not_nil
+    - assert_no_xml_tag
+    - assert_project
+    - assert_redirected_to
+    - assert_response
+    - assert_select
+    - assert_xml_tag
+    - authorize
+    - be
+    - belongs_to
+    - call
+    - change_column
+    - change_column_default
+    - change_column_null
+    - click_button
+    - click_link
+    - column
+    - connect
+    - content
+    - content_type
+    - debug
+    - define
+    - delete
+    - delete_element
+    - desc
+    - describe
+    - drop_table
+    - entry
+    - environment
+    - error
+    - exec_query
+    - exit
+    - expect_with
+    - fatal
+    - feature
+    - fill_in
+    - from
+    - get
+    - have_content
+    - have_link
+    - have_text
+    - head
+    - headers
+    - hook_into
+    - ignore_hosts
+    - include
+    - index
+    - info
+    - kill
+    - load
+    - match_array
+    - merge_timeout
+    - message
+    - mkdir
+    - must_be
+    - not_to
+    - orm
+    - parse
+    - post
+    - print
+    - put
+    - puts
+    - raise
+    - raise_error
+    - raise_exception
+    - raw_post
+    - raw_put
+    - read
+    - redirect_back
+    - redirect_to
+    - references
+    - register_driver
+    - register_template_handler
+    - remove_column
+    - remove_foreign_key
+    - remove_index
+    - remove_reference
+    - rename_column
+    - rename_table
+    - render
+    - render_error
+    - render_ok
+    - require
+    - required_parameters
+    - require_relative
+    - run
+    - run_with_retry
+    - set_content_type
+    - shared_context
+    - shared_examples
+    - start
+    - stopped
+    - strftime
+    - task
+    - test_framework
+    - throw
+    - to
+    - validate
+    - validate_presence_of
+    - validate_type
+    - value
+    - visit
+    - warn
+    - write
+    - yield
+    - ymp
+
 # We disabled this cop because of Rantly.
 Style/MultilineBlockChain:
   Exclude:
@@ -117,9 +251,50 @@ Rails/Exit:
   Exclude:
     - 'lib/memory_dumper.rb'
 
-RSpec/NestedGroups:
+Rails/HasAndBelongsToMany:
+  Enabled: false
+
+# FIXME: Disabled due to a bug in Rubocop. Once it is fixed in this PR (https://github.com/bbatsov/rubocop/pull/5707), it could be enabled again
+Rails/HttpStatus:
+  Enabled: false
+
+# Checks for the use of output calls like puts and print
+Rails/Output:
+  Exclude:
+    - 'app/jobs/**/*'
+    - 'config/*'
+    - 'db/**/*'
+    - 'lib/**/*'
+    # FIXME: Since exclusions in `.rubocop_todo.yml` are simply ignored when we also exclude files here, the following exclusions are TODOs
+    - 'app/lib/backend/test.rb'
+
+# Migrations creating unique indexes are sometimes not possible to run...
+# they raise a pretty weird error about some duplicate entries, even though those entries don't exist.
+Rails/UniqueValidationWithoutIndex:
   Enabled: false
 
+# We decided not to modify old migrations
+Rails/BulkChangeTable:
+  Exclude:
+    - 'db/migrate/20140210114542_remove_project_and_package_from_subscription.rb'
+    - 'db/migrate/20140624101042_add_package_tracking.rb'
+    - 'db/migrate/20140717101042_add_updateinfo_tracking.rb'
+    - 'db/migrate/20140718112346_flexible_updateinfoid.rb'
+    - 'db/migrate/20140721112346_delayed_job_indexes.rb'
+    - 'db/migrate/20140729101042_updateinfo_tracking_second_attempt.rb'
+    - 'db/migrate/20140801071042_product_version_tracking.rb'
+    - 'db/migrate/20170516140442_add_several_fields_to_kiwi_repositories.rb'
+    - 'db/migrate/20170607110443_add_and_remove_some_index_in_bs_request_actions.rb'
+    - 'db/migrate/20170630121602_add_index_bs_requests_action.rb'
+    - 'db/migrate/20170619111734_alter_notifications_to_use_polymorphic.rb'
+    - 'db/migrate/20170905081525_add_has_secure_password_support.rb'
+    - 'db/migrate/20170911142301_change_kiwi_package_groups_columns_from_big_int_to_int.rb'
+    - 'db/migrate/20170912140257_change_kiwi_packages_columns_from_big_int_to_int.rb'
+    - 'db/migrate/20171107125828_rename_kiwi_preference_types_to_kiwi_preferences.rb'
+    - 'db/migrate/20180516074538_explicitly_set_charset.rb'
+
+##################### RSpec ##################################
+
 RSpec/FilePath:
   # False positives
   Exclude:
@@ -128,9 +303,7 @@ RSpec/FilePath:
     - 'spec/models/project/maintenance_incidents_spec.rb'
     - 'spec/models/users/requests_spec.rb'
 
-# We disabled this cop because named subject isn't a better construction than
-# using let
-RSpec/NamedSubject:
+RSpec/LetSetup:
   Enabled: false
 
 # We sometimes have a lot of expectations when testing complete workflows
@@ -213,182 +386,14 @@ RSpec/MultipleExpectations:
     - 'spec/support/shared_examples/features/bootstrap_user_tab.rb'
     - 'spec/support/shared_examples/features/flags_tables.rb'
 
-Rails/HasAndBelongsToMany:
-  Enabled: false
-
-# FIXME: Disabled due to a bug in Rubocop. Once it is fixed in this PR (https://github.com/bbatsov/rubocop/pull/5707), it could be enabled again
-Rails/HttpStatus:
+# We disabled this cop because named subject isn't a better construction than
+# using let
+RSpec/NamedSubject:
   Enabled: false
 
-# Checks for the use of output calls like puts and print
-Rails/Output:
-  Exclude:
-    - 'app/jobs/**/*'
-    - 'config/*'
-    - 'db/**/*'
-    - 'lib/**/*'
-    # FIXME: Since exclusions in `.rubocop_todo.yml` are simply ignored when we also exclude files here, the following exclusions are TODOs
-    - 'app/lib/backend/test.rb'
-
-# Migrations creating unique indexes are sometimes not possible to run...
-# they raise a pretty weird error about some duplicate entries, even though those entries don't exist.
-Rails/UniqueValidationWithoutIndex:
+RSpec/NestedGroups:
   Enabled: false
 
-# We decided not to modify old migrations
-Rails/BulkChangeTable:
-  Exclude:
-    - 'db/migrate/20140210114542_remove_project_and_package_from_subscription.rb'
-    - 'db/migrate/20140624101042_add_package_tracking.rb'
-    - 'db/migrate/20140717101042_add_updateinfo_tracking.rb'
-    - 'db/migrate/20140718112346_flexible_updateinfoid.rb'
-    - 'db/migrate/20140721112346_delayed_job_indexes.rb'
-    - 'db/migrate/20140729101042_updateinfo_tracking_second_attempt.rb'
-    - 'db/migrate/20140801071042_product_version_tracking.rb'
-    - 'db/migrate/20170516140442_add_several_fields_to_kiwi_repositories.rb'
-    - 'db/migrate/20170607110443_add_and_remove_some_index_in_bs_request_actions.rb'
-    - 'db/migrate/20170630121602_add_index_bs_requests_action.rb'
-    - 'db/migrate/20170619111734_alter_notifications_to_use_polymorphic.rb'
-    - 'db/migrate/20170905081525_add_has_secure_password_support.rb'
-    - 'db/migrate/20170911142301_change_kiwi_package_groups_columns_from_big_int_to_int.rb'
-    - 'db/migrate/20170912140257_change_kiwi_packages_columns_from_big_int_to_int.rb'
-    - 'db/migrate/20171107125828_rename_kiwi_preference_types_to_kiwi_preferences.rb'
-    - 'db/migrate/20180516074538_explicitly_set_charset.rb'
-
-Style/MethodCallWithArgsParentheses:
-  Enabled: true
-  Exclude:
-    - 'app/views/**/*'
-    - 'db/migrate/**/*'
-    - 'Gemfile*'
-  # the cop doesn't come with a well defined list of good methods, so this
-  # list is the list of offending functions when introducing. Removing functions
-  # from here leads to autocorrecting calls, if you call a new DSL function, add
-  # it here
-  IgnoredMethods:
-    - abort
-    - add_column
-    - add_element
-    - add_foreign_key
-    - add_index
-    - add_reference
-    - after_action
-    - and_return
-    - around
-    - assert
-    - assert_equal
-    - assert_kind_of
-    - assert_match
-    - assert_nil
-    - assert_not
-    - assert_not_equal
-    - assert_not_nil
-    - assert_no_xml_tag
-    - assert_project
-    - assert_redirected_to
-    - assert_response
-    - assert_select
-    - assert_xml_tag
-    - authorize
-    - be
-    - belongs_to
-    - call
-    - change_column
-    - change_column_default
-    - change_column_null
-    - click_button
-    - click_link
-    - column
-    - connect
-    - content
-    - content_type
-    - debug
-    - define
-    - delete
-    - delete_element
-    - desc
-    - describe
-    - drop_table
-    - entry
-    - environment
-    - error
-    - exec_query
-    - exit
-    - expect_with
-    - fatal
-    - feature
-    - fill_in
-    - from
-    - get
-    - have_content
-    - have_link
-    - have_text
-    - head
-    - headers
-    - hook_into
-    - ignore_hosts
-    - include
-    - index
-    - info
-    - kill
-    - load
-    - match_array
-    - merge_timeout
-    - message
-    - mkdir
-    - must_be
-    - not_to
-    - orm
-    - parse
-    - post
-    - print
-    - put
-    - puts
-    - raise
-    - raise_error
-    - raise_exception
-    - raw_post
-    - raw_put
-    - read
-    - redirect_back
-    - redirect_to
-    - references
-    - register_driver
-    - register_template_handler
-    - remove_column
-    - remove_foreign_key
-    - remove_index
-    - remove_reference
-    - rename_column
-    - rename_table
-    - render
-    - render_error
-    - render_ok
-    - require
-    - required_parameters
-    - require_relative
-    - run
-    - run_with_retry
-    - set_content_type
-    - shared_context
-    - shared_examples
-    - start
-    - stopped
-    - strftime
-    - task
-    - test_framework
-    - throw
-    - to
-    - validate
-    - validate_presence_of
-    - validate_type
-    - value
-    - visit
-    - warn
-    - write
-    - yield
-    - ymp
-
 ##################### Bundler ##################################
 
 Bundler/OrderedGems:
diff --git a/src/api/.rubocop_todo.yml b/src/api/.rubocop_todo.yml
index 258d616a746..7123ddcc2b2 100644
--- a/src/api/.rubocop_todo.yml
+++ b/src/api/.rubocop_todo.yml
@@ -1,6 +1,6 @@
 # This configuration was generated by
 # `rubocop --auto-gen-config --auto-gen-only-exclude --exclude-limit 100`
-# on 2021-01-07 10:33:58 UTC using RuboCop version 1.8.0.
+# on 2021-02-04 14:20:38 UTC using RuboCop version 1.9.1.
 # The point is for the user to remove these configuration records
 # one by one as the offenses are removed from the code base.
 # Note that changes in the inspected code, or installation of new
@@ -49,6 +49,12 @@ Lint/NonLocalExitFromIterator:
     - 'app/controllers/configurations_controller.rb'
     - 'app/models/patchinfo.rb'
 
+# Offense count: 1
+# Cop supports --auto-correct.
+Lint/RedundantCopDisableDirective:
+  Exclude:
+    - 'spec/jobs/consistency_check_job_spec.rb'
+
 # Offense count: 5
 Lint/RescueException:
   Exclude:
@@ -132,7 +138,7 @@ Metrics/BlockNesting:
     - 'lib/xpath_engine.rb'
     - 'test/node_matcher.rb'
 
-# Offense count: 81
+# Offense count: 80
 # Configuration parameters: CountComments, Max, CountAsOne.
 Metrics/ClassLength:
   Exclude:
@@ -190,7 +196,6 @@ Metrics/ClassLength:
     - 'test/functional/build_controller_test.rb'
     - 'test/functional/channel_maintenance_test.rb'
     - 'test/functional/comments_controller_test.rb'
-    - 'test/functional/distributions_controller_test.rb'
     - 'test/functional/group_test.rb'
     - 'test/functional/interconnect_test.rb'
     - 'test/functional/issue_controller_test.rb'
@@ -309,7 +314,7 @@ Metrics/CyclomaticComplexity:
     - 'test/functional/zzz_post_consistency_test.rb'
     - 'test/node_matcher.rb'
 
-# Offense count: 921
+# Offense count: 920
 # Configuration parameters: CountComments, CountAsOne, ExcludedMethods, IgnoredMethods.
 Metrics/MethodLength:
   Max: 227
@@ -789,109 +794,6 @@ RSpec/IteratedExpectation:
 RSpec/LeadingSubject:
   Enabled: false
 
-# Offense count: 405
-RSpec/LetSetup:
-  Exclude:
-    - 'spec/controllers/cloud/upload_jobs_controller_spec.rb'
-    - 'spec/controllers/staging/backlog_controller_spec.rb'
-    - 'spec/controllers/staging/excluded_requests_controller_spec.rb'
-    - 'spec/controllers/staging/staged_requests_controller_spec.rb'
-    - 'spec/controllers/staging/staging_projects_controller_spec.rb'
-    - 'spec/controllers/status/checks_controller_spec.rb'
-    - 'spec/controllers/status/required_checks_controller_spec.rb'
-    - 'spec/controllers/trigger_controller_spec.rb'
-    - 'spec/controllers/webui/cloud/azure/upload_jobs_controller_spec.rb'
-    - 'spec/controllers/webui/cloud/ec2/upload_jobs_controller_spec.rb'
-    - 'spec/controllers/webui/cloud/upload_job/logs_controller_spec.rb'
-    - 'spec/controllers/webui/cloud/upload_jobs_controller_spec.rb'
-    - 'spec/controllers/webui/download_on_demand_controller_spec.rb'
-    - 'spec/controllers/webui/feeds_controller_spec.rb'
-    - 'spec/controllers/webui/groups/bs_requests_controller_spec.rb'
-    - 'spec/controllers/webui/groups/users_controller_spec.rb'
-    - 'spec/controllers/webui/image_templates_controller_spec.rb'
-    - 'spec/controllers/webui/package_controller_spec.rb'
-    - 'spec/controllers/webui/project_controller_spec.rb'
-    - 'spec/controllers/webui/projects/status_controller_spec.rb'
-    - 'spec/controllers/webui/request_controller_spec.rb'
-    - 'spec/controllers/webui/search_controller_spec.rb'
-    - 'spec/controllers/webui/staging/workflows_controller_spec.rb'
-    - 'spec/controllers/webui/users_controller_spec.rb'
-    - 'spec/db/data/generate_web_notifications_spec.rb'
-    - 'spec/db/data/migrate_comment_payload_spec.rb'
-    - 'spec/db/data/regenerate_notifications_spec.rb'
-    - 'spec/db/data/remove_duplicate_repositories_spec.rb'
-    - 'spec/db/data/remove_duplicated_flags_spec.rb'
-    - 'spec/db/data/remove_obsolete_notifications_spec.rb'
-    - 'spec/features/beta/webui/change_bugowner_spec.rb'
-    - 'spec/features/beta/webui/packages_spec.rb'
-    - 'spec/features/beta/webui/projects_spec.rb'
-    - 'spec/features/beta/webui/repositories_spec.rb'
-    - 'spec/features/beta/webui/users/admin_configuration_spec.rb'
-    - 'spec/features/beta/webui/users/user_contributions_spec.rb'
-    - 'spec/features/webui/change_bugowner_spec.rb'
-    - 'spec/features/webui/packages_spec.rb'
-    - 'spec/features/webui/projects_spec.rb'
-    - 'spec/features/webui/repositories_spec.rb'
-    - 'spec/features/webui/users/admin_configuration_spec.rb'
-    - 'spec/features/webui/users/user_contributions_spec.rb'
-    - 'spec/jobs/issue_tracker_write_to_backend_job_spec.rb'
-    - 'spec/jobs/project_create_auto_cleanup_requests_job_spec.rb'
-    - 'spec/jobs/send_event_emails_job_spec.rb'
-    - 'spec/jobs/staging_project_accept_job_spec.rb'
-    - 'spec/jobs/update_backend_infos_job_spec.rb'
-    - 'spec/jobs/update_package_meta_job_spec.rb'
-    - 'spec/jobs/update_packages_if_dirty_job_spec.rb'
-    - 'spec/lib/tasks/rollout_spec.rb'
-    - 'spec/mailers/event_mailer_spec.rb'
-    - 'spec/models/backend_package_spec.rb'
-    - 'spec/models/branch_package_spec.rb'
-    - 'spec/models/bs_request/data_table/row_spec.rb'
-    - 'spec/models/bs_request/find_for/group_spec.rb'
-    - 'spec/models/bs_request/find_for/user_spec.rb'
-    - 'spec/models/bs_request_action/differ/for_source_spec.rb'
-    - 'spec/models/bs_request_action/differ/query_builder_for_superseded_spec.rb'
-    - 'spec/models/bs_request_action/differ/query_builder_spec.rb'
-    - 'spec/models/bs_request_action/differ/source_package_finder_spec.rb'
-    - 'spec/models/bs_request_spec.rb'
-    - 'spec/models/channel_binary_spec.rb'
-    - 'spec/models/cloud/upload_job_spec.rb'
-    - 'spec/models/event_subscription/find_for_event_spec.rb'
-    - 'spec/models/full_text_search_spec.rb'
-    - 'spec/models/issue_tracker_spec.rb'
-    - 'spec/models/kiwi/image_spec.rb'
-    - 'spec/models/notification_spec.rb'
-    - 'spec/models/owner_search_spec.rb'
-    - 'spec/models/package_spec.rb'
-    - 'spec/models/project/image_template_spec.rb'
-    - 'spec/models/project/maintenance_incidents_spec.rb'
-    - 'spec/models/project/staging_project_spec.rb'
-    - 'spec/models/project/update_from_xml_command_spec.rb'
-    - 'spec/models/project_spec.rb'
-    - 'spec/models/repository_spec.rb'
-    - 'spec/models/review_spec.rb'
-    - 'spec/models/status_message_spec.rb'
-    - 'spec/models/update_notification_events_spec.rb'
-    - 'spec/models/user_spec.rb'
-    - 'spec/models/users/requests_spec.rb'
-    - 'spec/policies/staging/staged_request_policy_spec.rb'
-    - 'spec/policies/status/report_policy_spec.rb'
-    - 'spec/queries/open_requests_with_by_project_review_finder_spec.rb'
-    - 'spec/queries/open_requests_with_project_as_source_or_target_finder_spec.rb'
-    - 'spec/queries/packages_finder_spec.rb'
-    - 'spec/queries/projects_with_delegate_request_target_finder_spec.rb'
-    - 'spec/queries/projects_with_image_templates_finder_spec.rb'
-    - 'spec/queries/projects_with_very_important_attribute_finder_spec.rb'
-    - 'spec/services/package_service/schema_verifier_spec.rb'
-    - 'spec/support/shared_contexts/a_bs_request_with_reviews.rb'
-    - 'spec/support/shared_contexts/a_project_with_maintenance_statistics.rb'
-    - 'spec/support/shared_contexts/a_set_of_bs_requests.rb'
-    - 'spec/support/shared_contexts/a_user_and_subscriptions.rb'
-    - 'spec/support/shared_contexts/a_user_and_subscriptions_with_defaults.rb'
-    - 'spec/support/shared_examples/features/beta/user_tab.rb'
-    - 'spec/support/shared_examples/features/boostrap_flag_tables.rb'
-    - 'spec/support/shared_examples/features/bootstrap_user_tab.rb'
-    - 'spec/support/shared_examples/features/flags_tables.rb'
-
 # Offense count: 2
 # Configuration parameters: EnforcedStyle.
 # SupportedStyles: have_received, receive
@@ -900,7 +802,7 @@ RSpec/MessageSpies:
     - 'spec/controllers/webui/apidocs_controller_spec.rb'
     - 'spec/models/kiwi/image_spec.rb'
 
-# Offense count: 1376
+# Offense count: 1384
 # Configuration parameters: AllowSubject.
 RSpec/MultipleMemoizedHelpers:
   Max: 27
@@ -1080,12 +982,11 @@ Rails/InverseOf:
     - 'app/models/status/report.rb'
     - 'app/models/user.rb'
 
-# Offense count: 10
+# Offense count: 9
 # Configuration parameters: Include.
 # Include: app/controllers/**/*.rb
 Rails/LexicallyScopedActionFilter:
   Exclude:
-    - 'app/controllers/issues_controller.rb'
     - 'app/controllers/webui/monitor_controller.rb'
     - 'app/controllers/webui/package_controller.rb'
     - 'app/controllers/webui/project_controller.rb'
@@ -1179,22 +1080,6 @@ Rails/TimeZone:
     - 'test/unit/binary_release.rb'
     - 'test/unit/package_remove_test.rb'
 
-# Offense count: 12
-# Configuration parameters: Include.
-# Include: app/models/**/*.rb
-Rails/UniqueValidationWithoutIndex:
-  Exclude:
-    - 'app/models/bs_request_action.rb'
-    - 'app/models/cloud/ec2/configuration.rb'
-    - 'app/models/download_repository.rb'
-    - 'app/models/flag.rb'
-    - 'app/models/group.rb'
-    - 'app/models/issue_tracker.rb'
-    - 'app/models/kiwi/repository.rb'
-    - 'app/models/relationship.rb'
-    - 'app/models/role.rb'
-    - 'app/models/status_message_acknowledgement.rb'
-
 # Offense count: 118
 # Cop supports --auto-correct.
 # Configuration parameters: EnforcedStyle.
@@ -1237,7 +1122,7 @@ Style/ConditionalAssignment:
   Exclude:
     - 'app/models/bs_request_action_submit.rb'
 
-# Offense count: 734
+# Offense count: 735
 Style/Documentation:
   Enabled: false
 
@@ -1248,7 +1133,7 @@ Style/ExplicitBlockArgument:
     - 'app/lib/backend/connection.rb'
     - 'app/models/project.rb'
 
-# Offense count: 1470
+# Offense count: 1473
 # Cop supports --auto-correct.
 # Configuration parameters: EnforcedStyle.
 # SupportedStyles: always, always_true, never
@@ -1330,21 +1215,21 @@ Style/SoleNestedConditional:
 Style/StringConcatenation:
   Enabled: false
 
-# Offense count: 348
+# Offense count: 347
 # Cop supports --auto-correct.
 # Configuration parameters: MinSize.
 # SupportedStyles: percent, brackets
 Style/SymbolArray:
   EnforcedStyle: brackets
 
-# Offense count: 266
+# Offense count: 265
 # Cop supports --auto-correct.
 # Configuration parameters: EnforcedStyle, MinSize, WordRegex.
 # SupportedStyles: percent, brackets
 Style/WordArray:
   Enabled: false
 
-# Offense count: 1967
+# Offense count: 1969
 # Cop supports --auto-correct.
 # Configuration parameters: AutoCorrect, AllowHeredoc, AllowURI, URISchemes, IgnoreCopDirectives, IgnoredPatterns.
 # URISchemes: http, https
diff --git a/src/api/app/controllers/webui/users/notifications_controller.rb b/src/api/app/controllers/webui/users/notifications_controller.rb
index 81543bb4542..d025b6985f1 100644
--- a/src/api/app/controllers/webui/users/notifications_controller.rb
+++ b/src/api/app/controllers/webui/users/notifications_controller.rb
@@ -1,6 +1,6 @@
 class Webui::Users::NotificationsController < Webui::WebuiController
   MAX_PER_PAGE = 300
-  VALID_NOTIFICATION_TYPES = ['read', 'reviews', 'comments', 'requests', 'unread'].freeze
+  VALID_NOTIFICATION_TYPES = ['read', 'reviews', 'comments', 'requests', 'unread', 'incoming_requests', 'outgoing_requests'].freeze
 
   # TODO: Remove this when we'll refactor kerberos_auth
   before_action :kerberos_auth
@@ -71,7 +71,10 @@ def projects_for_filter
   end
 
   def notifications_count
-    counted_notifications = NotificationsFinder.new(User.session.notifications.for_web).unread.group(:notifiable_type).count
+    finder = NotificationsFinder.new(User.session.notifications.for_web)
+    counted_notifications = finder.unread.group(:notifiable_type).count
+    counted_notifications['incoming_requests'] = finder.for_incoming_requests.count
+    counted_notifications['outgoing_requests'] = finder.for_outgoing_requests.count
     counted_notifications.merge!('unread' => User.session.unread_notifications)
   end
 
diff --git a/src/api/app/models/user.rb b/src/api/app/models/user.rb
index ca9331fd3d1..7fae862b14b 100644
--- a/src/api/app/models/user.rb
+++ b/src/api/app/models/user.rb
@@ -716,17 +716,21 @@ def declined_requests(search = nil)
   end
 
   # list incoming requests involving this user
-  def incoming_requests(search = nil)
+  def incoming_requests(search = nil, all_states: false)
+    states = all_states ? BsRequest::VALID_REQUEST_STATES : [:new]
+
     result = BsRequest.where(id: BsRequestAction.bs_request_ids_of_involved_projects(involved_projects)).or(
       BsRequest.where(id: BsRequestAction.bs_request_ids_of_involved_packages(involved_packages))
-    ).with_actions.in_states(:new)
+    ).with_actions.in_states(states)
 
     search.present? ? result.do_search(search) : result
   end
 
   # list outgoing requests involving this user
-  def outgoing_requests(search = nil)
-    result = requests_created.in_states([:new, :review]).with_actions
+  def outgoing_requests(search = nil, all_states: false)
+    states = all_states ? BsRequest::VALID_REQUEST_STATES : [:new, :review]
+
+    result = requests_created.in_states(states).with_actions
     search.present? ? result.do_search(search) : result
   end
 
diff --git a/src/api/app/queries/notifications_finder.rb b/src/api/app/queries/notifications_finder.rb
index 9ae4c0862ee..d8bfc8ee106 100644
--- a/src/api/app/queries/notifications_finder.rb
+++ b/src/api/app/queries/notifications_finder.rb
@@ -24,6 +24,14 @@ def for_subscribed_user(user = User.session)
                     user, user.groups.map(&:id))
   end
 
+  def for_incoming_requests(user = User.session)
+    for_subscribed_user(user).where(notifiable: user.incoming_requests(all_states: true), delivered: false)
+  end
+
+  def for_outgoing_requests(user = User.session)
+    for_subscribed_user(user).where(notifiable: user.outgoing_requests(all_states: true), delivered: false)
+  end
+
   def for_notifiable_type(type = 'unread')
     notifications = self.class.new(with_notifiable)
 
@@ -34,6 +42,10 @@ def for_notifiable_type(type = 'unread')
       notifications.unread.where(notifiable_type: 'Comment')
     when 'requests'
       notifications.unread.where(notifiable_type: 'BsRequest')
+    when 'incoming_requests'
+      notifications.for_incoming_requests
+    when 'outgoing_requests'
+      notifications.for_outgoing_requests
     else
       notifications.unread
     end
diff --git a/src/api/app/views/webui/users/notifications/_notifications_filter.html.haml b/src/api/app/views/webui/users/notifications/_notifications_filter.html.haml
index 81dfb3ccab3..2304f82ed09 100644
--- a/src/api/app/views/webui/users/notifications/_notifications_filter.html.haml
+++ b/src/api/app/views/webui/users/notifications/_notifications_filter.html.haml
@@ -5,6 +5,8 @@
   %h5.ml-3 Filter
   = filter_notification_link('Comments', filter.count['Comment'], { type: 'comments' }, filter.selected_filter)
   = filter_notification_link('Requests', filter.count['BsRequest'], { type: 'requests' }, filter.selected_filter)
+  = filter_notification_link('Incoming Requests', filter.count['incoming_requests'], { type: 'incoming_requests' }, filter.selected_filter)
+  = filter_notification_link('Outgoing Requests', filter.count['outgoing_requests'], { type: 'outgoing_requests' }, filter.selected_filter)
 - unless filter.projects_for_filter.empty?
   .row.list-group-flush.mt-5
     %h5.ml-3 Projects
diff --git a/src/api/spec/controllers/webui/users/notifications_controller_spec.rb b/src/api/spec/controllers/webui/users/notifications_controller_spec.rb
index 5b4577b1949..027bd1cd9f0 100644
--- a/src/api/spec/controllers/webui/users/notifications_controller_spec.rb
+++ b/src/api/spec/controllers/webui/users/notifications_controller_spec.rb
@@ -104,6 +104,77 @@
                                                    creation_notification.reload)
       end
     end
+
+    context "when param type is 'incoming_requests'" do
+      let(:admin_user) { create(:admin_user, login: 'king') }
+      let(:target_package) { create(:package) }
+      let(:source_package) { create(:package, :as_submission_source) }
+      let!(:relationship_package_user) { create(:relationship_package_user, user: user, package: target_package) }
+
+      let!(:maintained_request) do
+        create(:bs_request_with_submit_action,
+               target_package: target_package,
+               source_package: source_package,
+               creator: admin_user)
+      end
+
+      let!(:request_created_notification) { create(:web_notification, :request_created, notifiable: maintained_request, subscriber: user) }
+      let!(:review_wanted_notification) { review_notification }
+
+      let(:params) { default_params.merge(type: 'incoming_requests') }
+
+      before do
+        subject
+      end
+
+      it_behaves_like 'returning success'
+
+      it "sets @notifications to all undelivered notifications of 'incoming_requests' type" do
+        expect(assigns[:notifications]).to include(request_created_notification.reload)
+      end
+
+      it "@notifications does not include 'review_wanted' notifications for 'incoming_requests' type" do
+        expect(assigns[:notifications]).not_to include(review_wanted_notification.reload)
+      end
+    end
+
+    context "when param type is 'outgoing_requests'" do
+      let(:admin_user) { create(:admin_user, login: 'king') }
+      let(:target_package) { create(:package) }
+      let(:source_package) { create(:package, :as_submission_source) }
+      let(:declined_bs_request) do
+        create(:declined_bs_request,
+               target_package: target_package,
+               source_package: source_package,
+               creator: user)
+      end
+
+      let(:maintained_request) do
+        create(:bs_request_with_submit_action,
+               target_package: target_package,
+               source_package: source_package,
+               creator: admin_user)
+      end
+
+      let!(:state_change_to_declined_notification) { create(:web_notification, :request_state_change, notifiable: declined_bs_request, subscriber: user) }
+      let(:request_created_notification) { create(:web_notification, :request_created, notifiable: maintained_request, subscriber: user) }
+
+      let(:params) { default_params.merge(type: 'outgoing_requests') }
+
+      before do
+        subject
+      end
+
+      it_behaves_like 'returning success'
+
+      it "sets @notifications to all undelivered notifications of 'outgoing_requests' type" do
+        expect(assigns[:notifications]).to include(state_change_to_declined_notification.reload)
+      end
+
+      it "@notifications does not include incoming requests for 'outgoing_requests' type" do
+        expect(assigns[:notifications]).not_to include(request_created_notification.reload)
+      end
+    end
   end
 
   describe 'PUT #update' do
diff --git a/src/api/spec/models/users/requests_spec.rb b/src/api/spec/models/users/requests_spec.rb
index 91119fb8bd5..7001fc301ef 100644
--- a/src/api/spec/models/users/requests_spec.rb
+++ b/src/api/spec/models/users/requests_spec.rb
@@ -237,6 +237,14 @@
     it 'does not include requests in any other state except :new or :review' do
       expect(subject).not_to include(declined_bs_request)
     end
+
+    context 'with all_states enabled' do
+      subject { confirmed_user.outgoing_requests(all_states: true) }
+
+      it 'does include requests created by the user and in any state' do
+        expect(subject).to include(review_bs_request, declined_bs_request, new_bs_request)
+      end
+    end
   end
 
   describe '#incoming_requests' do
@@ -250,6 +258,13 @@
                creator: admin_user)
       end
 
+      let!(:declined_bs_request) do
+        create(:declined_bs_request,
+               target_package: target_package,
+               source_package: source_package,
+               creator: admin_user)
+      end
+
       let!(:not_maintained_request) do
         create(:bs_request_with_submit_action,
                target_package: not_maintained_target_package,
@@ -280,6 +295,20 @@
       it 'does nots include requests if search does not match' do
         expect(confirmed_user.incoming_requests('does not exist')).not_to include(maintained_request)
       end
+
+      context 'with all_states enabled' do
+        subject { confirmed_user.incoming_requests(all_states: true) }
+
+        it 'does include requests in state new' do
+          expect(subject).to include(maintained_request)
+        end
+
+        it 'does include requests in any state' do
+          maintained_request.state = :review
+          maintained_request.save
+          expect(subject).to include(maintained_request, declined_bs_request)
+        end
+      end
     end
 
     context 'with maintained project' do
